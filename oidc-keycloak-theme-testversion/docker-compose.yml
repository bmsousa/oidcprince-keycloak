version: '3.8'

volumes:
  postgres_data:
    driver: local
  grafana_data:
    driver: local

services:
  postgres:
    image: postgres:latest
    container_name: keycloak_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build: .
    container_name: keycloak_custom
    ports:
      - "8080:8080"
      - "9000:9000" # Porta de gestão
      #- "8443:8443" # Comentado HTTPS
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_LOG_LEVEL: INFO
      KC_METRICS_ENABLED: "true"
      KC_CACHE_METRICS_HISTOGRAMS_ENABLED: "true"
      #KC_HTTPS_TRUST_STORE_FILE: /genCerts/truststore.jks # Comentado HTTPS
      #KC_HTTPS_TRUST_STORE_PASSWORD: tiago123 # Comentado HTTPS
      #KC_HTTPS_KEY_STORE_FILE: /genCerts/keystore.jks # Comentado HTTPS
      #KC_HTTPS_KEY_STORE_PASSWORD: tiago123 # Comentado HTTPS
      #KC_HTTPS_CLIENT_AUTH: request # Comentado HTTPS
      KC_HTTP_MANAGEMENT_PORT: 9000 # Porta de gestão
      KC_HTTP_MANAGEMENT_RELATIVE_PATH: /management # Caminho de gestão
    #volumes:
      # - ./certs:/etc/x509 # Comentado HTTPS
      # - ./genCerts:/genCerts # Comentado HTTPS
    depends_on:
      postgres:
        condition: service_healthy
    restart: always


#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - "9090:9090"
#    depends_on:
#      - keycloak

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana_data:/var/lib/grafana
#    depends_on:
#      - prometheus